# https://www.nginx.com/blog/nginx-caching-guide/
# https://wiki.mozilla.org/Security/Server_Side_TLS

proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=cache:60m inactive=60m use_temp_path=off;

upstream backend {
  server tier1-tile.map3.network:80;
}

server {

    listen       80;
    listen 443 ssl http2;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/ssl/certs/ca-certificates.crt;
    ssl_certificate_key /etc/ssl/private/private-key.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;


    # modern configuration. tweak to your needs.
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;


    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;

    resolver 8.8.8.8 1.1.1.1 valid=60s;
    resolver_timeout 2s;

    server_name  _;

    root /usr/share/nginx/html;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location /server_status {
        stub_status on;

        access_log off;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        allow 127.0.0.1;
        deny  all;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location ~* \.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|mov|json|map|svg|htm|html|woff|otf|ttf|woff2)$ {
        access_log	off;
        expires		30d;
    }

    location ~ /v\d+/debug/var {
    	access_log	off;
        proxy_pass       http://backend;
    }

    location ~* \.(pbf|mvt) {
        # remove all args
        set $args   "";
        proxy_pass       http://backend;

        proxy_set_header Connection "";

        proxy_cache cache;
        proxy_cache_key $scheme$proxy_host$uri;

        proxy_cache_revalidate on;
        proxy_cache_min_uses 1;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;

        proxy_cache_valid 200 10m;
        proxy_cache_valid 301 302 2m;
        proxy_cache_valid 404 1m;
        proxy_cache_valid any 1m;

        expires 1h;

        types { } default_type "application/x-protobuf";

        add_header X-Cache-Status $upstream_cache_status;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Timing-Allow-Origin' '*';

        
    }
}
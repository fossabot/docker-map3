# refer: https://github.com/elastic/examples/tree/master/Miscellaneous/docker/full_stack_example

version: "2.3"

services:
  pause:
    image: alpine:latest
    restart: always
    command: ["sh", "-c", "tail -f /dev/null"]

  map3:
    image: nginx:1.15.8-alpine
    restart: always
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      #Logs are mounted to a relative path. These are also accessed by Filebeat and consumed by the Nginx module
      - ./log/map3/:/var/log/nginx/
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/cache.conf:/etc/nginx/conf.d/default.conf:ro
      - ./public/favicon.ico:/usr/share/nginx/html/favicon.ico:ro
    healthcheck:
        test: ["CMD", "wget", "-q", "-O", "-", "http://127.0.0.1:80/server_status"]
        interval: 5s
        timeout: 5s
        retries: 5
        start_period: 5s

  titan:
    image: nginx:1.15.8-alpine
    restart: always
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      #Logs are mounted to a relative path. These are also accessed by Filebeat and consumed by the Nginx module
      - ./log/titan/:/var/log/nginx/
      - ./config/titan/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/titan/titan.conf:/etc/nginx/conf.d/default.conf:ro
      - ./config/titan/launch.sh:/launch.sh:ro
      - ./public/:/usr/share/nginx/html/:ro
      - ./public/node-info.json:/usr/share/nginx/html/node-info.json
    healthcheck:
        test: ["CMD", "wget", "-q", "-O", "-", "http://127.0.0.1:80/server_status"]
        interval: 5s
        timeout: 5s
        retries: 5
        start_period: 5s

  reverse-proxy:
    image: nginx:1.15.8-alpine
    restart: always
    ports: 
      - 80:80
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      #Logs are mounted to a relative path. These are also accessed by Filebeat and consumed by the Nginx module
      - ./log/reverse-proxy/:/var/log/nginx/
      - ./config/reverse-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/reverse-proxy/proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - ./public/favicon.ico:/usr/share/nginx/html/favicon.ico:ro
    depends_on: 
      map3:
        condition: service_healthy
      titan:
        condition: service_healthy

  registry:
    image: arraylabs/docker-alpine-cron:latest
    restart: always
    volumes: 
      - ./public/node-info.json:/usr/share/nginx/html/node-info.json
    environment: 
      CRON_STRINGS: |
        * * * * * wget --quiet -O - --method=POST http://node-registry.map3.network/tile/online
        * * * * * IP=`wget -q -O -  http://whatismyip.akamai.com/` && (cat /usr/share/nginx/html/node-info.json | sed -e "s,\(\"nodePublicIp\": \)\"[^\"]*\",\\1\"$$IP\",g" -e "s,\(http://\)[^/]*,\\1$$IP,g" > /tmp/node-info.json && cat /tmp/node-info.json > /usr/share/nginx/html/node-info.json)

  influxdb:
    image: influxdb:1.7-alpine
    restart: always
    volumes: 
      - influxdb_data:/var/lib/influxdb
      - ./config/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
    healthcheck:
        test: ["CMD", "wget", "-q", "-O", "-", "http://127.0.0.1:8086/ping"]
        interval: 5s
        timeout: 5s
        retries: 5
        start_period: 5s

  telegraf:
    image: telegraf:1.9-alpine
    restart: always
    volumes: 
      - ./config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on: 
      influxdb:
        condition: service_healthy

  grafana:
    image: grafana/grafana:5.4.3
    restart: always
    ports: 
      - 3000:3000 # grafana
    entrypoint: /entry.sh
    volumes: 
      - ./config/grafana/entry.sh:/entry.sh:ro
      - ./config/grafana/conf:/usr/share/grafana/conf:ro
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./config/grafana/img/fav32.png:/usr/share/grafana/public/img/fav32.png:ro
      - ./config/grafana/img/hyn_logo.svg:/usr/share/grafana/public/img/grafana_icon.svg:ro
      - ./config/grafana/img/map3_typelogo.svg:/usr/share/grafana/public/img/grafana_typelogo.svg:ro
    environment: 
      - GF_PATHS_PROVISIONING=/usr/share/grafana/conf/provisioning
    depends_on: 
      - telegraf

  #Filebeat container
  filebeat:
    user: root
    image: docker.elastic.co/beats/filebeat:6.5.4
    volumes:
      #Mount the filebeat configuration so users can make edit
      - ./config/beats/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./config/beats/filebeat/modules.d/:/usr/share/filebeat/modules.d/:ro
      - ./config/beats/filebeat/default.json:/usr/share/filebeat/module/nginx/access/ingest/default.json:ro
      #Named volume fsdata. This is used to persist the registry file between restarts, so to avoid data duplication
      - fbdata:/usr/share/filebeat/data/
      #Mount nginx log directory
      - ./log/nginx/:/var/log/nginx/
      #Allows us to report on docker from the hosts information
      - /var/run/docker.sock:/var/run/docker.sock
    command: sh -c "filebeat -e --strict.perms=false -E name=`curl -s http://whatismyip.akamai.com/`"
    restart: on-failure
    depends_on:
      - map3

  #Metricbeat container
  metricbeat:
    user: root
    image: docker.elastic.co/beats/metricbeat:6.5.4
    volumes:
      #Mount the metricbeat configuration so users can make edit
      - ./config/beats/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      #Mount the modules.d directory into the container. This allows user to potentially make changes to the modules and they will be dynamically loaded.
      - ./config/beats/metricbeat/modules.d/:/usr/share/metricbeat/modules.d/:ro
      #The commented sections below enable Metricbeat to monitor the Docker host rather than the Metricbeat container. These are used by the system module.
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      #Allows us to report on docker from the hosts information
      - /var/run/docker.sock:/var/run/docker.sock
      #We mount the host filesystem so we can report on disk usage with the system module
      - /:/hostfs:ro
    command: sh -c "metricbeat -e --strict.perms=false -system.hostfs=/hostfs -E name=`curl -s http://whatismyip.akamai.com/`"
    restart: on-failure
    depends_on:
      #wait for the these services to come up. This ensures the logs are available and ES exists for indexing
      - map3

  logrotate:
    image: blacklabelops/logrotate:latest
    restart: always
    environment: 
      - LOGS_DIRECTORIES=/var/log/nginx/ 
      - LOGROTATE_INTERVAL=daily
      - LOGROTATE_COPIES=7
      - LOGROTATE_SIZE=500M
    volumes:
      - ./log/map3/:/var/log/map3/
      - ./log/titan/:/var/log/titan/
      - ./log/reverse-proxy/:/var/log/reverse-proxy/

volumes:
  #Filebeat data i.e. registry file
  fbdata:
    driver: local
  influxdb_data:
    driver: local